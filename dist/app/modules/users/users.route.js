"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRoute = void 0;
const express_1 = __importDefault(require("express"));
const users_controllers_1 = require("./users.controllers");
const Auth_1 = __importDefault(require("../../middleware/Auth"));
const users_constant_1 = require("./users.constant");
const validatieZod_1 = __importDefault(require("../../middleware/validatieZod"));
const users_validation_1 = require("./users.validation");
const router = express_1.default.Router();
router.post('/signup', (0, validatieZod_1.default)(users_validation_1.userzodValidation.userValidation), users_controllers_1.UserController.createUser);
router.post('/signin', users_controllers_1.UserController.SignIn);
router.get('/allUser', (0, Auth_1.default)(users_constant_1.USER_ROLE.admin), users_controllers_1.UserController.AllUsers);
router.put('/updateUser/:id', (0, Auth_1.default)(users_constant_1.USER_ROLE.admin), users_controllers_1.UserController.UpdateUser);
router.get('/me', (0, Auth_1.default)(users_constant_1.USER_ROLE.user, users_constant_1.USER_ROLE.admin), users_controllers_1.UserController.getMe);
router.put('/update-profile', (0, Auth_1.default)(users_constant_1.USER_ROLE.user, users_constant_1.USER_ROLE.admin), (0, validatieZod_1.default)(users_validation_1.userzodValidation.updateUserValidation), users_controllers_1.UserController.userUpdateProfile);
router.delete('/deleteUser/:id', (0, Auth_1.default)(users_constant_1.USER_ROLE.admin), users_controllers_1.UserController.deleteUser);
router.put('/userStatus/:id', (0, Auth_1.default)(users_constant_1.USER_ROLE.admin), users_controllers_1.UserController.userStatusUpdate);
router.post('/forget-password', (0, validatieZod_1.default)(users_validation_1.userzodValidation.userForgetValidation), users_controllers_1.UserController.forgetPassword);
router.post('/reset-password', users_controllers_1.UserController.resetPassword);
exports.UserRoute = router;
